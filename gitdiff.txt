diff --git a/Makefile b/Makefile
index 7d6f422..8d40540 100644
--- a/Makefile
+++ b/Makefile
@@ -10,7 +10,7 @@ OBJ_DIR = obj
 
 SRCS = minishell.c tokenizer/tokenizer.c tokenizer/utils.c tokenizer/assign.c tokenizer/count_words.c tokenizer/assign_redirect.c lexer/lexer.c lexer/lexemes_redirect.c lexer/lexemes.c lexer/quotes.c lexer/var_subs.c lexer/wrappers.c utils/utils.c parser/parser.c parser/create_node.c parser/fill_node_cmd_args.c parser/fill_node_redirects.c utils/debug.c env_vars.c utils/check_input.c  \
 		builtins/pwd.c builtins/env.c builtins/export.c builtins/unset.c builtins/cd.c builtins/exit.c builtins/echo.c utils/read_input.c  \
-		redirector/redirections.c redirector/heredoc.c executor/execute_builtins.c executor/execute_cmd.c executor/utils.c executor/pipes.c
+		redirector/redirections.c redirector/heredoc.c executor/execute_builtins.c executor/execute_cmd.c executor/utils.c executor/handle_pipes.c
 # OBJS = $(SRCS:.c=.o)
 OBJS = $(addprefix $(OBJ_DIR)/, $(SRCS:.c=.o))
 # OBJS := $(OBJS:$(SRC_DIR)/%=$(OBJ_DIR)/%)
diff --git a/include/minishell.h b/include/minishell.h
index 50de352..a37f92f 100644
--- a/include/minishell.h
+++ b/include/minishell.h
@@ -300,4 +300,6 @@ char	**build_cmd_and_args_arr(t_ast_node *node, int cmd_and_args_count);
 int	command_is_builtin(t_ast_node *node);
 void	handle_command_node(t_ast_node *node, char *dir_paths, char **envp,
 		t_env_table *env_table);
+void	handle_nodes(t_ast_node *node, char *dir_paths, char **envp,
+		t_env_table *env_table);
 #endif
diff --git a/src/executor/pipes.c b/src/executor/handle_pipes.c
similarity index 58%
rename from src/executor/pipes.c
rename to src/executor/handle_pipes.c
index bfe954a..8691849 100644
--- a/src/executor/pipes.c
+++ b/src/executor/handle_pipes.c
@@ -1,12 +1,12 @@
 /* ************************************************************************** */
 /*                                                                            */
 /*                                                        :::      ::::::::   */
-/*   pipes.c                                            :+:      :+:    :+:   */
+/*   handle_pipes.c                                     :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
 /*   By: bsengeze <bsengeze@student.42berlin.de>    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2023/10/31 00:08:30 by bsengeze          #+#    #+#             */
-/*   Updated: 2023/10/31 00:28:43 by bsengeze         ###   ########.fr       */
+/*   Updated: 2023/10/31 00:47:46 by bsengeze         ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -41,41 +41,46 @@ void	handle_pipes(t_ast_node *node, char *dir_paths, char **envp,
 	pid_t	left_pid;
 	pid_t	right_pid;
 
-	if (node->type == N_PIPE)
-	{
-		if (pipe(pipe_fd) == -1)
-			error_exit();
-		left_pid = fork();
-		if (left_pid == -1)
+	if (pipe(pipe_fd) == -1)
 			error_exit();
-		if (left_pid == 0)
-		{
-			close(pipe_fd[0]);
-			dup2(pipe_fd[1], STDOUT_FILENO);
-			close(pipe_fd[1]);
-			handle_redirections(node->children[0]);
-			handle_pipes(node->children[0], dir_paths, envp, env_table);
-			// TODO : add free (maybe)
-			exit(EXIT_SUCCESS);
-		}
-		right_pid = fork();
-		if (right_pid == -1)
-			error_exit();
-		if (right_pid == 0)
-		{
-			close(pipe_fd[1]);
-			dup2(pipe_fd[0], STDIN_FILENO);
-			close(pipe_fd[0]);
-			handle_redirections(node->children[1]);
-			handle_pipes(node->children[1], dir_paths, envp, env_table);
-			// TODO : add free (maybe)
-			exit(EXIT_SUCCESS);
-		}
+	left_pid = fork();
+	if (left_pid == -1)
+		error_exit();
+	if (left_pid == 0)
+	{
 		close(pipe_fd[0]);
+		dup2(pipe_fd[1], STDOUT_FILENO);
 		close(pipe_fd[1]);
-		waitpid(left_pid, NULL, 0);
-		waitpid(right_pid, NULL, 0);
+		handle_redirections(node->children[0]);
+		handle_pipes(node->children[0], dir_paths, envp, env_table);
+		// TODO : add free (maybe)
+		exit(EXIT_SUCCESS);
 	}
+	right_pid = fork();
+	if (right_pid == -1)
+		error_exit();
+	if (right_pid == 0)
+	{
+		close(pipe_fd[1]);
+		dup2(pipe_fd[0], STDIN_FILENO);
+		close(pipe_fd[0]);
+		handle_redirections(node->children[1]);
+		handle_pipes(node->children[1], dir_paths, envp, env_table);
+		// TODO : add free (maybe)
+		exit(EXIT_SUCCESS);
+	}
+	close(pipe_fd[0]);
+	close(pipe_fd[1]);
+	waitpid(left_pid, NULL, 0);
+	waitpid(right_pid, NULL, 0);
+}
+
+void	handle_nodes(t_ast_node *node, char *dir_paths, char **envp,
+		t_env_table *env_table)
+{
+
+	if (node->type == N_PIPE)
+		handle_pipes(node, dir_paths, envp, env_table);
 	else
 		handle_command_node(node, dir_paths, envp, env_table);
 }
@@ -83,8 +88,8 @@ void	handle_pipes(t_ast_node *node, char *dir_paths, char **envp,
 void	handle_command_node(t_ast_node *node, char *dir_paths, char **envp,
 		t_env_table *env_table)
 {
-		if (command_is_builtin(node))
-			execute_builtin(node, envp, env_table);
-		else
-			execute_cmd(node, dir_paths, envp);
+	if (command_is_builtin(node))
+		execute_builtin(node, envp, env_table);
+	else
+		execute_cmd(node, dir_paths, envp);
 }
diff --git a/src/redirector/heredoc.c b/src/redirector/heredoc.c
index bf090ab..1216782 100644
--- a/src/redirector/heredoc.c
+++ b/src/redirector/heredoc.c
@@ -1,3 +1,15 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   heredoc.c                                          :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: bsengeze <bsengeze@student.42berlin.de>    +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2023/10/31 00:50:07 by bsengeze          #+#    #+#             */
+/*   Updated: 2023/10/31 00:50:09 by bsengeze         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
 #include "minishell.h"
 
 void	handle_heredocs(t_ast_node *node)
